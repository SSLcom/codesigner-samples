# Continuous integration triggers
trigger: 
  - none

# Defines environment variables globally. Job level property overrides global variables
variables: 
  buildConfiguration: 'Release'

# Groups jobs into stages. All jobs in one stage must complete before next stage is executed.
stages:
  - stage: build
    # When the workflow runs, this is the name that is logged
    displayName: Build
    jobs:
      - job:
        pool:
          # Run job on Windows VMs 
          vmImage: 'windows-latest'
        steps:
          # Install Dotnet 6.0.x
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK'
          inputs:
            version: '6.0.x'
            performMultiLevelLookup: true
            includePreviewVersions: true
        
           # Restore Dotnet project
        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            commmand: 'restore'

          # Build dotnet project with Release configuration
        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            commmand: build
            projects: HelloWorld.csproj
            arguments: '--configuration $(buildConfiguration)'

          # Created directories for signed artifacts
        - powershell: New-Item -ItemType Directory -Path ./artifacts
          displayName: 'Created directories for artifacts'

          # Created directories for signed packages
        - powershell: New-Item -ItemType Directory -Path ./packages
          displayName: 'Created directories for packages'

          # Copy artifact to be signing path
        - powershell: Copy-Item ./bin/Release/netcoreapp3.1/HelloWorld-0.0.1.dll -Destination ./packages/HelloWorld.dll
          displayName: "Copy built artifacts to packages directory"

          # Save artifact in order to use signing job
        - task: PublishBuildArtifacts@1
          displayName: 'Save to be signed artifact for downloading'
          inputs:
            pathtoPublish: ./packages/HelloWorld.dll
            artifactName: HelloWorld.dll

  - stage: Sign
    # When the workflow runs, this is the name that is logged
    displayName: Sign
    jobs:
    - job:
      pool:
        # Run job on Ubuntu VMs
        vmImage: "Ubuntu-latest"
      steps:
        # Created directories for signed artifacts
      - script: mkdir -p ./artifacts && mkdir -p ./packages
        displayName: "Created directories for artifacts and packages"

        # Download to be signed artifact
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: HelloWorld.dll
          downloadPath: ./packages

        # Install Docker 17.09.0-ce
      - task: DockerInstaller@0
        displayName: Docker Installer
        inputs:
          dockerVersion: 17.09.0-ce
          releaseType: stable

        # Docker Pull CodeSigner Docker Image
      - script: docker pull ghcr.io/sslcom/codesigner:latest
        displayName: 'Docker Pull CodeSigner Docker Image'

        # Sign artifact with CodeSigner docker image
      - script: docker run -i --rm --dns 8.8.8.8 --network host --volume $PWD/packages:/codesign/examples --volume $PWD/artifacts:/codesign/output 
                -e USERNAME=$(USERNAME) -e PASSWORD=$(PASSWORD) -e CREDENTIAL_ID=$(CREDENTIAL_ID) -e TOTP_SECRET=$(TOTP_SECRET) 
                -e ENVIRONMENT_NAME=$(ENVIRONMENT_NAME) ghcr.io/sslcom/codesigner:latest sign -input_file_path=/codesign/examples/HelloWorld.dll 
                -output_dir_path=/codesign/output
        displayName: 'Sign artifact with CodeSigner docker image'

        # Save signed artifact for downloading
      - task: PublishBuildArtifacts@1
        displayName: 'Save signed artifact for downloading'
        inputs:
          pathtoPublish: ./artifacts/HelloWorld.dll
          artifactName: HelloWorld.dll